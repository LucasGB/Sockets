/** * TCPClient: Cliente para conexao TCP * Descricao: Envia uma informacao ao servidor e finaliza a conexao */import java.net.*;import java.io.*;import java.util.Scanner;public class TCPClient {	public static void main (String args[]) {        String ipServidor = "127.0.0.1";        int serverPort = 7896;   /* especifica a porta */        Scanner sc = new Scanner(System.in);            	    Socket s = null;        String serverResp;        try{            s = new Socket(ipServidor, serverPort);  /* conecta com o servidor */              Listener l = new Listener(s);            Transmitter t = new Transmitter(s);	    } catch (UnknownHostException e){		System.out.println("Socket:"+e.getMessage());            } catch (EOFException e){		System.out.println("EOF:"+e.getMessage());            } catch (IOException e){		System.out.println("leitura:"+e.getMessage());            } //catch     } //main} //classclass Listener extends Thread {    DataInputStream in;    Socket clientSocket;    public Listener (Socket aClientSocket){        try {            clientSocket = aClientSocket;            in = new DataInputStream(clientSocket.getInputStream());            this.start();        } catch(IOException e){            System.out.println("Connection: " + e.getMessage());        }    }    public void run(){        try{            String data;            do{                data = in.readUTF();                System.out.println("Received message: " + data);                if(data.equals("SAIR")){                    break;                }            }while(true);            in.close(); clientSocket.close();  /* finaliza a conexao com o cliente */                                    } catch (EOFException e) {            System.out.println("EOF: "+e.getMessage());        } catch(IOException e) {            System.out.println("leituralkkk: "+e.getMessage());        }    }    }class Transmitter extends Thread {    DataOutputStream out;    Socket clientSocket;    Scanner sc = new Scanner(System.in);    String msg;    public Transmitter(Socket aClientSocket){        try{            clientSocket = aClientSocket;            out = new DataOutputStream(clientSocket.getOutputStream());            this.start();        } catch(IOException e){            System.out.println("Connection: " + e.getMessage());        }    }    public void run(){        try{            do{                System.out.print("Digite uma mensagem: ");                String msg = sc.nextLine();                 if(msg.equals("SAIR")){                    break;                }                else out.writeUTF(msg);                out.flush();            }while(true);            out.close(); clientSocket.close();                    } catch (UnknownHostException e){        System.out.println("Socket:"+e.getMessage());            } catch (EOFException e){        System.out.println("EOF:"+e.getMessage());            } catch (IOException e){        System.out.println("leitura:"+e.getMessage());            } //catch        }    }